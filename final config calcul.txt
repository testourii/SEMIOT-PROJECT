[{"id":"e6da2bae.5862f8","type":"function","z":"edd02289.e3b61","name":"Calculate Final configuration","func":"H=msg.payload\n//*********************\n//ignoring extra nodes\nj=-1;\nT=[];\nfor (k = 0;k < H.length; k++){\n       if ( H[k].type!=\"mqtt-broker\" && H[k].type!=\"tab\" && H[k].type!=\"messagehub service\" ){\nj++;\nT[j]=H[k];\n}\n}\n//*****************************\n\n//add number to each node\nu=0;\nfor (k = 0;k < T.length; k++){\n    node=T[k];\n    if(node.type==\"SEMIOT\"){\n        u++;\n        nodeS= {\n        \"id\": node.id,\n        \"name\":node.name,\n        \"type\": \"SEMIOT\",\n        \"z\": node.z,\n        \"security\": node.security,\n        \"typeL\": node.typeL,\n        \"x\": node.x,\n        \"y\":node.y,\n        \"wires\":node.wires,\n        \"num\":u\n    }\n    T[k]=nodeS ;\n}}\n//****************************\n//add pred list to each node\nfor (k = 0;k < T.length; k++){\n    node=T[k];\n    if(node.type==\"SEMIOT\"){\n    ch=[];th=\"\";\n    for (i = 0;i< T.length; i++){\n         if(T[i].type==\"SEMIOT\"){\n        n=T[i].wires[0];\n        for(j=0;j<n.length;j++)\n        if (n[j]==node.id){\n        ch.push(T[i].id);\n        th=th+\"|\"+T[i].num    \n        }\n    }}\n    if(th===\"\") th=\"Ã˜\" ;else th=th.substring(1);\n nodeS= {\n        \"id\": node.id,\n        \"name\":node.name,\n        \"type\": \"SEMIOT\",\n        \"z\": node.z,\n        \"security\": node.security,\n        \"typeL\": node.typeL,\n        \"x\": node.x,\n        \"y\":node.y,\n        \"wires\":node.wires,\n        \"num\":node.num,\n        \"pred\":ch,\n        \"predd\":th\n    }\n    T[k]=nodeS ;\n}}\n//*************************\n//add pred list between flow and sub-flows\nfor (k = 0;k < T.length; k++){\n    node=T[k];\nif(node.type==\"subflow\"){\n    ch=\"subflow:\"+node.id ;\n    id=node.out[0].wires[0].id;\n for (j = 0;j< T.length; j++){\n    node1=T[j];\nif(node1.type==ch){\n    n=node1.wires[0][0];\n     for (i = 0;i< T.length; i++){\n         if(T[i].id==n){\n         pred=[id];\n         th=tnum(id);\n         d=T[i];\n          nodeS= {\n        \"id\": d.id,\n        \"name\":d.name,\n        \"type\":d.type,\n        \"z\": d.z,\n        \"security\": d.security,\n        \"typeL\": d.typeL,\n        \"x\": d.x,\n        \"y\":d.y,\n        \"wires\":d.wires,\n        \"pred\":pred,\n        \"num\":d.num,\n        \"predd\":th\n\n    }\n    T[i] =nodeS;    \n}}}}}}\n//*****************************************\n\nfunction tnum(id){\n     k=0\n  while(T[k].id!=id){\n      k++\n  }\n  return T[k].num\n\n}\n//***********************************\n//function that return node by id\nfunction security(id,T) {\n    k=0\n  while(T[k].id!=id){\n      k++\n  }\n  return T[k].security\n}\n//*********************************\n //function determine a predecessor list for node in json array T --return String\n\n// function that return max label\n\nfunction MaxLabel(node,T) {\n   max=node.security\n   pred=node.pred\n   indice=0\n   for(i=0;i<pred.length;i++){\n      \n        s=security(pred[i],T)\n       if (s>max) max=s\n   }\n   return max\n}\n//*****************************************\n//fucntion that check security\nfunction Analyse(L)\n{ verif=true;\n  for(var i=0;i<L.length;i++){\n      if(L[i].type==\"SEMIOT\"&& verif ){\n     max=MaxLabel(L[i],L)\n     if(max>L[i].security) {\n        if((L[i].typeL==\"REQUIRED\")) {\n           L[i].typeL=\"ERROR\" ;\n          verif=false;\n          \n        }\n        else L[i].security=max\n     }\n  }}\n  return L\n}\n//*****************************************\n\n//*********html file******************\nfunction table(T,ty)\n{\n    ch=\"<div class=\\\"tableaux\\\">\"\nch+=\"<TABLE class=\\\"tg\\\"  ><CAPTION>\"+ty+\" configurations</CAPTION>\";\nch+=\"<TR><TH class=\\\"tg-yw4l\\\">num<TH class=\\\"tg-yw4l\\\">sec_deg<TH class=\\\"tg-yw4l\\\">Label-type<TH class=\\\"tg-yw4l\\\">pred\";\n\n for (i =0; i < T.length; i++) {\n     if(T[i].type==\"SEMIOT\"){\n     if (T[i].typeL==\"ERROR\") {\n         ch=ch+\"<TR><TD class=\\\"tg-27kz\\\">\"+String(T[i].num)+\"<TD class=\\\"tg-27kz\\\" colspan=\\\"2\\\">ERROR</center><TD class=\\\"tg-27kz\\\">\"+T[i].predd\n      }else {\n    ch=ch+\"<TR><TD class=\\\"tg-yw4l\\\">\"+String(T[i].num)+\"<TD class=\\\"tg-yw4l\\\">\"+String(T[i].security)+\"<TD class=\\\"tg-yw4l\\\">\"+String(T[i].typeL)+\"<TD class=\\\"tg-yw4l\\\">\"+T[i].predd;\n }}}\nch+=\"</table></div>\";\nreturn ch ;\n}\n//***************************\nvar ch=\"\"\nch=\"<!DOCTYPE html> <html> <head> <title>Security Configurations</title> </head> <body><link rel=\\\"icon\\\" href=\\\"img.png\\\">\";\nch+=\"<style type=\\\"text/css\\\">.tableaux{display:inline-block;vertical-align:top;}\"\nch+=\".tg  {border-collapse:collapse;border-spacing:0;border-color:#999;}\"\nch+=\".tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#999;color:#444;background-color:#F7FDFA;}\"\nch+=\".tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#999;color:#fff;background-color:#26ADE4;}\"\nch+=\".tg .tg-yw4l{vertical-align:top;text-align:center;}\"\nch+=\".tg .tg-27kz{background-color:#ffb7b7;border-color:inherit;text-align:center;vertical-align:top}\"\nch+=\".tg .tg-03cy{text-align:center;background-color:#9ffccd;border-color:inherit;vertical-align:top}</style>\"\nch+=\"<center>\"\nch+=\"<p>&nbsp;</p>\"\nch+=\"<img src=\\\"im.png\\\" alt=\\\"SEMIoT\\\" width=\\\"166\\\" height=\\\"56\\\">\"\n\nch+=\"<p> </p>\"\nch+=table(T,\"initial\")\n//****************************\n \nL=Analyse(T);\n ch+=\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\n   ch+=table(L,\"final\")\nch+=\" </center></body> </html>\";\n//*****\nfor(i=0;i<L.length;i++){\n node=L[i];\n if(node.type==\"SEMIOT\"){\n L[i]= {\n        \"id\": node.id,\n        \"name\":node.name,\n        \"type\": \"SEMIOT\",\n        \"z\": node.z,\n        \"security\": node.security,\n        \"typeL\":node.typeL,\n        \"x\": node.x,\n        \"y\":node.y,\n        \"wires\":node.wires,\n        \"num\":node.num,\n        \"predd\":node.predd\n      \n    }\n    if (L[i].typeL==\"ERROR\"){\n        L[i]={\n            \"id\":L[i].id,\n            \"type\":\"error\",\n            \"z\":L[i].z,\n            \"security\": L[i].security,\n            \"typeL\":\"REQUIRED\",\n            \"name\":L[i].name,\n            \"relaxation\":\"OFF\",\n            \"x\":L[i].x,\n            \"y\":L[i].y,\n            \"wires\":L[i].wires,\n            \"num\":L[i].num,\n               \"predd\":L[i].predd\n        }\n    }\n}}\n//*******************************************\n\n//*******************************************\nmsg.payload=ch;\nvar newMsg = { \"payload\": L };\nreturn [msg,newMsg] ;","outputs":2,"noerr":0,"x":480,"y":320,"wires":[["72cc5ab9.0ca8a4"],["1efaa507.a1a0db"]]},{"id":"72cc5ab9.0ca8a4","type":"file","z":"edd02289.e3b61","name":"Final Config.html","filename":"C:\\Users\\Houcem\\test\\SEMIoT.html","appendNewline":true,"createDir":true,"overwriteFile":"true","x":750,"y":320,"wires":[]},{"id":"1efaa507.a1a0db","type":"file","z":"edd02289.e3b61","name":"Final Graph Flow","filename":"C:\\Users\\Houcem\\.node-red\\lib\\flows\\Final Graph.json","appendNewline":true,"createDir":true,"overwriteFile":"true","x":750,"y":400,"wires":[]},{"id":"b3022a4b.5fdc88","type":"flow-reader","z":"edd02289.e3b61","name":"Data Dependence Flow","protocol":"http","url":"127.0.0.1:1880","sheet":"Initial SEMIoT Flow","auth":false,"once":false,"x":210,"y":320,"wires":[["e6da2bae.5862f8"]]}]
